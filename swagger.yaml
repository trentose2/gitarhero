swagger: '2.0'
info:
  version: '1.0'
  title: "Gitarhero API"
  description: GitarheroAPO is a simple API. If you are reading this, you already know what it is meant for.
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: api.gitarhero.org
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /users:
    post:
      description: >-
        You may register on Gitarhero using this action.
        It takes a JSON object containing name, surname, username, email, password.
      summary: Register a New User
      parameters:
        - name: user
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - surname
              - username
              - email
              - password
            properties:
              name:
                type: string
              surname:
                type: string
              username:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        201:
          description: ''
          examples:
            application/json:
                name: John
                surname: Smith
                username: johnsmith
                email: johnsmith@acme.com
                password: betterBeSomeSecret
    get:
      description: >-
        A teacher or a student views their own profile.
      summary: See your own profile
      responses:
        201:
          description: ''
  /users/me:
    get:
      description: >-
        Sees a student's profile.
      summary: See a user profile.
      responses:
        201:
          description: ''
  /groups:
    post:
      description: >-
        Creates a group of candidates, who will further take an exam.
        It takes a JSON object containing group's name and members.
      summary: Create a New Group
      parameters:
        - name: group
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - members
            properties:
              name:
                type: string
              members:
                type: array
                items:
                  type: integer
      responses:
        201:
          description: ''
    get:
      description: >-
        A teacher sees the groups they have created; a student sees the groups they belong to.
      summary: See groups
      responses:
        201:
          description: ''
  /groups/{id}/members:
    get:
      description: >-
        Gets the list of members of a group. If the user issuing this request is a teacher, then the list represents the members of a group that the teacher themselves have created; if it is a student, then the list represents the memebrs of a group that the student themselves belong to.
      summary: See group members
      responses:
        201:
          description: ''
      parameters:
        - name: id
          in: path
          required: true
          type: integer
  /assignments:
    post:
      description: >-
        Creates an exam.
        It takes a JSON object containing exam's name, tasks, groups, deadline, status.
      summary: Create an Exam.
      parameters:
        - name: exam
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - tasks
              - groups
              - deadline
              - status
            properties:
              name:
                type: string
              tasks:
                type: array
                items:
                  type: integer
              groups:
                type: array
                items:
                  type: integer
              deadline:
                type: string
              status:
                type: string
                enum: [open, closed]
      responses:
        201:
          description: ''